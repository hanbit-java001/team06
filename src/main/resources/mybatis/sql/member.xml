<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">

	<select id="countMember" parameterType="string" resultType="int">
		SELECT COUNT(member_id)
		  FROM MEMBER
		 WHERE member_email = #{memberEmail}
	</select>

	<select id="countMembers" resultType="int">
  		SELECT COUNT(MEMBER_ID)
  		  FROM MEMBER
  	</select>

	<insert id="insertNaverMember" parameterType="MemberVO">
		INSERT INTO MEMBER
			(member_id, member_email, member_api)
		VALUES
			(#{memberId}, #{memberEmail}, #{memberApi})
	</insert>

	<insert id="insertMember" parameterType="MemberVO">
		INSERT INTO MEMBER
			(member_id, member_name, member_email, member_pw)
		VALUES
			(#{memberId}, #{memberName}, #{memberEmail}, #{memberPw})
	</insert>

	<insert id="insertMember2" parameterType="MemberVO">
		INSERT INTO MEMBER
			(member_id, member_name, member_email, member_pw)
		VALUES
			(SEQ_MEMBER.currVAL, #{memberName}, #{memberEmail}, #{memberPw})
	</insert>

	<select id="selectMember" parameterType="map" resultType="MemberVO">
		SELECT MEMBER_ID,
				MEMBER_NAME,
				MEMBER_EMAIL,
				MEMBER_PW,
			   member_api
		  FROM MEMBER
		 <choose>
		 	<when test="memberEmail != null">
		 		WHERE MEMBER_EMAIL = #{memberEmail}
		 	</when>
		 	<when test="memberId != null">
		 		WHERE member_id = #{memberId}
		 	</when>
		 	<otherwise>
		 		WHERE MEMBER_EMAIL = '!@#$'
		 	</otherwise>
		 </choose>
	</select>

	<select id="selectNaverMember" parameterType="map" resultType="MemberVO">
		SELECT member_id,
			   member_name,
			   member_email,
			   member_pw,
			   member_api
		  FROM MEMBER
		 <choose>
		 	<when test="memberEmail != null">
		 		WHERE member_email = #{memberEmail}
		 	</when>
		 	<when test="memberId != null">
		 		WHERE member_id = #{memberId}
		 	</when>
		 	<otherwise>
		 		WHERE member_email = '!@#$'
		 	</otherwise>
		 </choose>
	</select>

	<select id="selectMemberId" parameterType="string" resultType="int">
		SELECT member_id
		  FROM MEMBER
		 WHERE member_email = #{memberEmail}
	</select>

	<select id="selectPassword" parameterType="int" resultType="string">
		SELECT password
		  FROM MEMBER
		 WHERE member_id = #{memberId}
	</select>

	<update id="updateMember" parameterType="MemberVO">
		UPDATE MEMBER
		   SET member_name = #{memberName},
		       member_email = #{memberEmail},
		       member_pw = #{memberPw}
	</update>

	<select id="selectNextMemberId" resultType="int">
		SELECT SEQ_MEMBER.NEXTVAL
		  FROM DUAL
	</select>

	<select id="selectMembers" parameterType="int" resultType="MemberVO">
	<![CDATA[
		SELECT 	a.rn, a.member_name, a.member_email
		  FROM (
			SELECT a.rn, a.member_name, a.member_email
			  FROM (
				SELECT ROWNUM rn, MEMBER_NAME memberName, MEMBER_EMAIL memberEmail
				  FROM MEMBER) a
			 WHERE rn <= 3 * #{page}) a
		 WHERE rn > 3 * (#{page} - 1)
  	]]>
  	</select>



</mapper>